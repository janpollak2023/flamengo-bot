# main.py ‚Äî Telegram bot KikiTipy (Render 24/7 + fallback polling)
import os, asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ====== ENV promƒõnn√© ======
TOKEN = os.environ["TELEGRAM_BOT_TOKEN"]

# PUBLIC_URL ‚Äî pokud nen√≠ ruƒçnƒõ v Renderu, pokus√≠ se ji zjistit automaticky
PUBLIC_URL = (
    os.environ.get("PUBLIC_URL")
    or os.environ.get("RENDER_EXTERNAL_URL")
    or ("https://" + os.environ.get("RENDER_EXTERNAL_HOSTNAME", ""))
)

PORT = int(os.environ.get("PORT", "10000"))


# ====== P≈ò√çKAZY ======
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Ahoj, tady Kiki Tipy. Jedu! ‚úÖ")

async def cmd_ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("pong")

async def cmd_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ Bot bƒõ≈æ√≠ (Render + webhook)\nTZ: Europe/Prague")

async def cmd_tip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üîí Bezpeƒçnostn√≠ tiket\n‚Ä¢ Hokej ‚Äî 2. t≈ôetina g√≥ly: Over 1.5\n  D≈Øvƒõra: 86%\n\n"
        "‚ö†Ô∏è Risk tiket\n‚Ä¢ Fotbal ‚Äî g√≥l do poloƒçasu: ANO\n  D≈Øvƒõra: 72%"
    )


# ====== SPU≈†TƒöN√ç BOTA ======
async def run():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("ping", cmd_ping))
    app.add_handler(CommandHandler("status", cmd_status))
    app.add_handler(CommandHandler("tip", cmd_tip))

    webhook_path = f"webhook/{TOKEN}"

    # Pokud Render nem√° PUBLIC_URL, jede fallback p≈ôes polling
    if not PUBLIC_URL or PUBLIC_URL == "https://":
        print("‚ö†Ô∏è  PUBLIC_URL nenalezen ‚Äì spou≈°t√≠m POLLING m√≥d.")
        await app.delete_webhook(drop_pending_updates=True)
        await app.run_polling()
        return

    # Webhook m√≥d (Render)
    print(f"‚úÖ Spou≈°t√≠m WEBHOOK: {PUBLIC_URL}/{webhook_path}")
    await app.delete_webhook(drop_pending_updates=True)
    await app.bot.set_webhook(url=f"{PUBLIC_URL}/{webhook_path}")

    await app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=webhook_path,
    )


if __name__ == "__main__":
    asyncio.run(run())
